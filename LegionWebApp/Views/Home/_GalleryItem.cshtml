@model LegionWebApp.Models.GalleryItem
@using LegionWebApp.Models;
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@inject IViewLocalizer T
@{
	string cdnLink = Environment.GetEnvironmentVariable("Spaces_CDN");
}
<div class="feed-post">
	<div class="post-header">
		<img src="~/images/logo.png" class="profile-picture">
		<div class="post-info">
			<div class="username">@T["Legion Foundation"]</div>
			<div class="post-time">@if (Model.Date != null) { @T[DateOnly.Parse(Model.Date).ToShortDateString()] }</div>
		</div>
	</div>
	<div class="post-content">
		@if (Model.Title != null)
		{
			@T[@Model.Title]
		}
		@{
			Model.Date = DateTime.TryParseExact(Model.Date, "yyyy-MM-dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime inputDate) ? inputDate.ToString("dd.MM.yyyy") : null;
		}
	</div>
	<div class="container post-media" data-hide-media-overlay="@Model.MaxDisplay">
		<div class="row row-cols-2 row-cols-sm-4">
			@if (Model.Media != null)
			{
				@foreach (var media in Model.Media.OrderBy(m => m.DisplayOrder))
				{
					if (media is Video video)
					{
						<div class="col">
							<div class="media-item">
								<video class="lazy smallMedia" disablePictureInPicture preload="auto" controls controlslist="noplaybackrate nodownload nofullscreen" src="@($"{cdnLink}{Model.Date + "/" + video.Link}")" type="video/mp4">
								</video>
							</div>
						</div>
					}
					else if (media is Image image)
					{
						<div class="col">
							<div class="media-item">
								<img class="lazy smallMedia" src="@($"h{cdnLink}{Model.Date + "/" + image.Link}")" data-src="@($"{cdnLink}{Model.Date + "/small/" + image.Link}")" />

							</div>
						</div>
					}
				}
			}
		</div>
	</div>
</div>